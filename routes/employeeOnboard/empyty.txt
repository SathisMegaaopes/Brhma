
// router.get('/getEmployee', (req, res) => {

//     const { employee_id } = req.query;

//     const getEmployeeQuery = ' SELECT * FROM `employee_onboard` WHERE `employee_number` = ? AND `status` = 1 ';

//     conn.query(getEmployeeQuery, [employee_id], (err, rows) => {

//         const candidate_id = rows[0].emp_id;

//         let response = { status: 0, data: {}, message: '' };

//         if (err) {
//             response.message = "Something went wrong in getting the employee Details " + err;
//             res.send(response);
//         } else {


//             const profilePathQuery = ' SELECT `profile` FROM `candidate_master` WHERE `candidate_id` = ? ;'

//             conn.query(profilePathQuery, [candidate_id], (err, rows2) => {

//                 if (err) {

//                     response.message = "Something went wrong in the getting details of profile photo .... " + err;
//                     res.send(response);

//                 } else {

//                     const PopulatedData = rows.map((item, index) => {
//                         return {
//                             firstname: item.first_name,
//                             lastname: item.last_name,
//                             dateOfBirth: DateFormater(item.dateofbirth),
//                             employeeNumber: item.employee_number,
//                             gender: item.gender,
//                             email: item.email,
//                             mobileNumber: item.mobile_number,
//                             phone: item.phone,
//                             bloodGroup: item.blood_group,
//                             dateOfJoining: DateFormater(item.date_of_join),
//                             fathersName: item.father_name,
//                             fathersOccupation: item.father_occupation,
//                             countryOfOrigin: item.country_of_origin,
//                             nationality: item.nationality,
//                             emergencyContactName: item.emergency_contact_name,
//                             emergencyContactNumber: item.emergency_contact_number,
//                             emergencyContactRelation: item.emergency_contact_relation,
//                             spouseName: item.spouse_name,
//                             physicallyChallenged: item.physically_challenged,
//                             education: item.education,
//                             addressprofType: item.address_prof_type,
//                             reportingmanager: item.reporting_manager,
//                             reportingteamlead: item.reporting_team_lead,
//                             designation: item.designation,
//                             department: item.department,
//                             team: item.team,
//                             referrdby: item.referred_by,
//                             employmentstatus: item.employment_status,
//                             employeestatus: item.employee_status,
//                             shift: item.shift,
//                             grade: item.grade,
//                             probabationperiod: item.probabtion_period,
//                             salaryofferred: item.salary_offered,
//                             totalmonthlyctc: item.total_month_salary,
//                             attendancebonus: item.attendance_bonus,
//                             totalyearlyctc: item.total_yearly_salary,
//                             billablestatus: item.billable_status,
//                             addresprofpath: item.addres_prof_path,
//                             currentaddress: item.current_address,
//                             permanentAddress: item.permanent_address,
//                             currentCity: item.current_city,
//                             currentPincode: item.current_pincode,
//                             permanentcity: item.permanent_city,
//                             permanentPincode: item.permanent_pincode,
//                             organization1: item.organization_1,
//                             designation1: item.designation_1,
//                             startdate1: DateFormater(item.start_date_1),
//                             enddate1: DateFormater(item.end_date_1),
//                             totalExperience1: item.totalExperience_1,
//                             organization2: item.organization_2,
//                             designation2: item.designation_2,
//                             startdate2: DateFormater(item.start_date_2),
//                             enddate2: DateFormater(item.end_date_2),
//                             totalExperience2: item.totalExperience_2,
//                             organization3: item.organization_3,
//                             designation3: item.designation_3,
//                             startdate3: DateFormater(item.start_date_3),
//                             enddate3: DateFormater(item.end_date_3),
//                             totalExperience3: item.totalExperience_3,
//                             aadhaarnumber: item.aadhaar_number,
//                             pannumber: item.pan_number,
//                             passportnumber: item.passport_number,
//                             uannumber: item.uan_number,
//                             pfnumber: item.pf_number,
//                             pfjoindate: DateFormater(item.pfjoin_date),
//                             esinumber: item.esi_number,
//                             lwfnumber: item.lwf_number,
//                             modeofpayment: item.mode_of_payment,
//                             bankname: item.bank_name,
//                             branchname: item.branch_name,
//                             ifsccode: item.ifsc_code,
//                             accountNumber: item.account_number,
//                             beneficiarycode: item.beneficiary_code,
//                             // profileUrl: rows2[index].profile,
//                             profileUrl:item.profileUrl

//                         }
//                     })

//                     response.message = "Data fetcched Successfully....";
//                     response.status = 1;
//                     response.data = PopulatedData;
//                     res.send(response);
//                 }
//             })

//         }
//     })


// })


// const { employee_id } = req.query;












// const item = rows[0];
// let mapppedData;
// if (pageNumber2 === 0) {
//     mapppedData = {
//         firstname: item.first_name,
//         lastname: item.last_name,
//         dateOfBirth: DateFormater(item.dateofbirth),
//         employeeNumber: item.employee_number,
//         gender: item.gender,
//         email: item.email,
//         mobileNumber: item.mobile_number,
//         phone: item.phone,
//         bloodGroup: item.blood_group,
//         dateOfJoining: DateFormater(item.date_of_join),
//         fathersName: item.father_name,
//         fathersOccupation: item.father_occupation,
//         countryOfOrigin: item.country_of_origin,
//         nationality: item.nationality,
//         emergencyContactName: item.emergency_contact_name,
//         emergencyContactNumber: item.emergency_contact_number,
//         emergencyContactRelation: item.emergency_contact_relation,
//         spouseName: item.spouse_name,
//         physicallyChallenged: item.physically_challenged,
//         education: item.education,
//         addressprofType: item.address_prof_type,
//         profileUrl: item.profileUrl
//     }

// } else if (pageNumber2 === 1) {
//     mapppedData = {
//         reportingmanager: item.reporting_manager,
//         reportingteamlead: item.reporting_team_lead,
//         designation: item.designation,
//         department: item.department,
//         team: item.team,
//         referrdby: item.referred_by,
//         employmentstatus: item.employment_status,
//         employeestatus: item.employee_status,
//         shift: item.shift,
//         grade: item.grade,
//         probabationperiod: item.probabtion_period,
//         salaryofferred: item.salary_offered,
//         totalmonthlyctc: item.total_month_salary,
//         attendancebonus: item.attendance_bonus,
//         totalyearlyctc: item.total_yearly_salary,
//         billablestatus: item.billable_status,
//         addresprofpath: item.addres_prof_path,
//     }
// } else if (pageNumber2 === 2) {
//     mapppedData = {
//         currentaddress: item.current_address,
//         permanentAddress: item.permanent_address,
//         currentCity: item.current_city,
//         currentPincode: item.current_pincode,
//         permanentcity: item.permanent_city,
//         permanentPincode: item.permanent_pincode,
//     }
// } else if (pageNumber2 === 3) {
//     mapppedData = {
//         organization1: item.organization_1,
//         designation1: item.designation_1,
//         startdate1: DateFormater(item.start_date_1),
//         enddate1: DateFormater(item.end_date_1),
//         totalExperience1: item.totalExperience_1,
//         organization2: item.organization_2,
//         designation2: item.designation_2,
//         startdate2: DateFormater(item.start_date_2),
//         enddate2: DateFormater(item.end_date_2),
//         totalExperience2: item.totalExperience_2,
//         organization3: item.organization_3,
//         designation3: item.designation_3,
//         startdate3: DateFormater(item.start_date_3),
//         enddate3: DateFormater(item.end_date_3),
//         totalExperience3: item.totalExperience_3,
//     }

// } else if (pageNumber2 === 4) {
//     mapppedData = {
//         aadhaarnumber: item.aadhaar_number,
//         pannumber: item.pan_number,
//         passportnumber: item.passport_number,
//         uannumber: item.uan_number,
//         pfnumber: item.pf_number,
//         pfjoindate: DateFormater(item.pfjoin_date),
//         esinumber: item.esi_number,
//         lwfnumber: item.lwf_number,
//     }
// }

// response.message = 'Fetched the employee Data based on the page successfully...';
// response.status = 1;
// response.data = mapppedData;
// res.send(response);






// `first_name`,`last_name`,`dateofbirth`,`employee_number`,`gender`,`email`,`mobile_number`,`phone`,`blood_group`,`date_of_join`,`father_name`,`father_occupation`,`country_of_origin`,
// `nationality`,`emergency_contact_name`,`emergency_contact_number`,`emergency_contact_relation`,`spouse_name`,`physically_challenged`,`education`,`address_prof_type`,`profileUrl`,

// `reporting_manager`, `reporting_team_lead`, `designation`, `department`, `team`, `referred_by`, `employment_status`, `employee_status`, `shift`,
//     `grade`, `probabtion_period`, `salary_offered`, `total_month_salary`, `total_yearly_salary`, `attendance_bonus`, `billable_status`, `addres_prof_path`,

// `current_address`,`current_city`,`current_pincode`,`permanent_address`,`permanent_city`,`permanent_pincode`,


//     `organization_1`,`designation_1`,`start_date_1` ,`end_date_1` ,`totalExperience_1`,`organization_2`,`designation_2`,`start_date_2` ,
// `end_date_2` ,`totalExperience_2`,`organization_3`,`designation_3`,`start_date_3` ,`end_date_3` ,`totalExperience_3`,

// `aadhaar_number`,`pan_number`,`passport_number`,`uan_number`,`pf_number`,`pfjoin_date`,`esi_number`,`lwf_number`,






































// conn.query(getEmployeeQuery, [employee_id], (err, rows) => {

//     if (err) {
//         response.message = "Something went wrong in getting the employee Details " + err;
//         res.send(response);
//     } else {

//         if (rows.length > 0) {
//             const item = rows[0];

//             const PopulatedData = {
//                 firstname: item.first_name,
//                 lastname: item.last_name,
//                 dateOfBirth: DateFormater(item.dateofbirth),
//                 employeeNumber: item.employee_number,
//                 gender: item.gender,
//                 email: item.email,
//                 mobileNumber: item.mobile_number,
//                 phone: item.phone,
//                 bloodGroup: item.blood_group,
//                 dateOfJoining: DateFormater(item.date_of_join),
//                 fathersName: item.father_name,
//                 fathersOccupation: item.father_occupation,
//                 countryOfOrigin: item.country_of_origin,
//                 nationality: item.nationality,
//                 emergencyContactName: item.emergency_contact_name,
//                 emergencyContactNumber: item.emergency_contact_number,
//                 emergencyContactRelation: item.emergency_contact_relation,
//                 spouseName: item.spouse_name,
//                 physicallyChallenged: item.physically_challenged,
//                 education: item.education,
//                 addressprofType: item.address_prof_type,
//                 reportingmanager: item.reporting_manager,
//                 reportingteamlead: item.reporting_team_lead,
//                 designation: item.designation,
//                 department: item.department, //ithu onnu
//                 team: item.team, //ithu onnu
//                 referrdby: item.referred_by, //ithu onnu , motham moonu ok va.....
//                 employmentstatus: item.employment_status,
//                 employeestatus: item.employee_status,
//                 shift: item.shift,
//                 grade: item.grade,
//                 probabationperiod: item.probabtion_period,
//                 salaryofferred: item.salary_offered,
//                 totalmonthlyctc: item.total_month_salary,
//                 attendancebonus: item.attendance_bonus,
//                 totalyearlyctc: item.total_yearly_salary,
//                 billablestatus: item.billable_status,
//                 addresprofpath: item.addres_prof_path,
//                 currentaddress: item.current_address,
//                 permanentAddress: item.permanent_address,
//                 currentCity: item.current_city,
//                 currentPincode: item.current_pincode,
//                 permanentcity: item.permanent_city,
//                 permanentPincode: item.permanent_pincode,
//                 organization1: item.organization_1,
//                 designation1: item.designation_1,
//                 startdate1: DateFormater(item.start_date_1),
//                 enddate1: DateFormater(item.end_date_1),
//                 totalExperience1: item.totalExperience_1,
//                 organization2: item.organization_2,
//                 designation2: item.designation_2,
//                 startdate2: DateFormater(item.start_date_2),
//                 enddate2: DateFormater(item.end_date_2),
//                 totalExperience2: item.totalExperience_2,
//                 organization3: item.organization_3,
//                 designation3: item.designation_3,
//                 startdate3: DateFormater(item.start_date_3),
//                 enddate3: DateFormater(item.end_date_3),
//                 totalExperience3: item.totalExperience_3,
//                 aadhaarnumber: item.aadhaar_number,
//                 pannumber: item.pan_number,
//                 passportnumber: item.passport_number,
//                 uannumber: item.uan_number,
//                 pfnumber: item.pf_number,
//                 pfjoindate: DateFormater(item.pfjoin_date),
//                 esinumber: item.esi_number,
//                 lwfnumber: item.lwf_number,
//                 modeofpayment: item.mode_of_payment,
//                 bankname: item.bank_name,
//                 branchname: item.branch_name,
//                 ifsccode: item.ifsc_code,
//                 accountNumber: item.account_number,
//                 beneficiarycode: item.beneficiary_code,
//                 profileUrl: item.profileUrl

//             }

//             response.message = "Data fetcched Successfully....";
//             response.status = 1;
//             response.data = PopulatedData;
//             res.send(response);
//         }

//     }
// })







    // React.useEffect(() => {

    //     const isPageRefreshed = () => {
    //         const navigationEntries = performance.getEntriesByType('navigation');
    //         if (navigationEntries.length > 0) {
    //             return navigationEntries[0].type === 'reload';
    //         }
    //         return false;
    //     };

    //     const handleUnload = async (event) => {
    //         try {    

    //             if (isPageRefreshed()) {
    //                 return;
    //             }

    //             let url = URL + "login/validateUser";

    //             let request = { "user_name": userinfo.user_name, "user_pwd": userinfo.user_pwd, "type": "logout" };

    //             const response = await axios.post(url, request)

    //         } catch (err) {
    //             console.log(err)
    //         }
    //     }

    //     window.addEventListener('beforeunload', handleUnload);

    //     return () => {
    //         window.removeEventListener('beforeunload', handleUnload);
    //     };
    // }, []);





                                    {/* <Accordion variant='outlined' expanded={accordianExpand === 0}
                                    onChange={() => {
                                        setAccordianExpand(0);
                                        setActiveStep(0)
                                    }}
                                >

                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel1-content"
                                        id="panel1-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography>

                                        </Typography>

                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Basic Information
                                        </Typography>

                                        {accordianExpand === 0 && (

                                            <>
                                                {openEdit ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEdit(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEdit(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>

                                    <AccordionDetails>
                                        <EmployeeBasicInformation
                                            handleProfileUpload={handleProfileUpload}
                                            profileImageUrl={profileImageUrl}
                                            control={control}
                                            formData1={formData1}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEdit}
                                            addressprof={addressprof}
                                            setFormData1={setFormData1}
                                            interRequest={interRequest}
                                        />

                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEdit) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(0)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>
                                </Accordion>

                                <Accordion variant='outlined' expanded={accordianExpand === 1}

                                    onChange={() => {
                                        setAccordianExpand(1);
                                        setActiveStep(1)

                                    }}>

                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel2-content"
                                        id="panel2-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Employee Position
                                        </Typography>

                                        {accordianExpand === 1 && (

                                            <>
                                                {openEdittwo ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEdittwo(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEdittwo(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>

                                    <AccordionDetails>

                                        <EmployeePosition
                                            designation={designation}
                                            departments={departments}
                                            handleProofUpload={handleProofUpload}
                                            uploadFileName={uploadFileName}
                                            shifts={shifts}
                                            grade={grade}
                                            uploadStatus={uploadStatus}
                                            teams={teams}
                                            employees={employees}
                                            employeeMap={employeeMap}
                                            StyledLabel={StyledLabel}
                                            mapOptions={mapOptions}
                                            control={control}
                                            formData2={formData2}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEdittwo}
                                            addressprof={addressprof}
                                            setFormData2={setFormData2}
                                        />


                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEdittwo) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(1)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>

                                </Accordion>

                                <Accordion variant='outlined' expanded={accordianExpand === 2}
                                    onChange={() => {
                                        setAccordianExpand(2);
                                        setActiveStep(2)
                                    }}
                                >

                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel3-content"
                                        id="panel3-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Employee Address
                                        </Typography>

                                        {accordianExpand === 2 && (

                                            <>
                                                {openEditthree ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditthree(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditthree(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>

                                    <AccordionDetails>

                                        <EmployeeAddress
                                            copyToPermanent={copyToPermanent}
                                            handleCheckboxChange2={handleCheckboxChange2}
                                            MultilineTextField={MultilineTextField}
                                            StyledLabel={StyledLabel}
                                            mapOptions={mapOptions}
                                            control={control}
                                            formData3={formData3}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEditthree}
                                            addressprof={addressprof}
                                            setFormData3={setFormData3}
                                        />

                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEditthree) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(2)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>
                                </Accordion>

                                <Accordion variant='outlined' expanded={accordianExpand === 3}
                                    onChange={() => {
                                        setAccordianExpand(3);
                                        setActiveStep(3);
                                    }}
                                >
                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel4-content"
                                        id="panel4-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Employee Experience
                                        </Typography>

                                        {accordianExpand === 3 && (

                                            <>
                                                {openEditfour ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditfour(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditfour(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>

                                    <AccordionDetails>

                                        <EmployeeExperience
                                            StyledLabel={StyledLabel}
                                            control={control}
                                            formData4={formData4}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEditfour}
                                            addressprof={addressprof}
                                            setFormData4={setFormData4}
                                        />

                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEditfour) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(3)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>
                                </Accordion>

                                <Accordion variant='outlined' expanded={accordianExpand === 4}
                                    onChange={() => {
                                        setAccordianExpand(4)
                                        setActiveStep(4)
                                    }}
                                >

                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel5-content"
                                        id="panel5-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Employee Statuory Info
                                        </Typography>

                                        {accordianExpand === 4 && (

                                            <>
                                                {openEditfive ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditfive(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditfive(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>


                                    <AccordionDetails>

                                        <EmployeeStatuoryinfo
                                            isPFChecked={isPFChecked}
                                            handleCheckboxChange={handleCheckboxChange}
                                            isESIChecked={isESIChecked}
                                            handleCheckboxESIChange={handleCheckboxESIChange}
                                            isLWFChecked={isLWFChecked}
                                            handleCheckboxLWFChange={handleCheckboxLWFChange}
                                            StyledLabel={StyledLabel}
                                            control={control}
                                            formData5={formData5}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEditfive}
                                            setFormData5={setFormData5}
                                        />

                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEditfive) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(4)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>
                                </Accordion>

                                <Accordion variant='outlined' expanded={accordianExpand === 5}
                                    onChange={() => {
                                        setAccordianExpand(5);
                                        setActiveStep(5);
                                    }}
                                >


                                    <AccordionSummary
                                        expandIcon={<ArrowDownwardIcon />}
                                        aria-controls="panel6-content"
                                        id="panel6-header"
                                        sx={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            width: '100%',
                                        }}
                                    >
                                        <Typography sx={{ flexGrow: 1, fontSize: '1.25rem' }}>
                                            Employee Payment Mode
                                        </Typography>

                                        {accordianExpand === 5 && (

                                            <>
                                                {openEditsix ? (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditsix(false)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <EditIcon />
                                                    </Button>
                                                ) : (
                                                    <Button
                                                        variant="contained"
                                                        color="primary"
                                                        onClick={() => setOpenEditsix(true)}
                                                        sx={{
                                                            zIndex: 5,
                                                            backgroundColor: '#1976d2',
                                                            borderRadius: '50%',
                                                            width: 50,
                                                            height: 50,
                                                            minWidth: 0,
                                                            padding: 0,
                                                            display: 'flex',
                                                            left: -20,
                                                            justifyContent: 'center',
                                                            alignItems: 'center',
                                                            '&:hover': {
                                                                backgroundColor: '#1565c0',
                                                            },
                                                        }}
                                                    >
                                                        <ClearIcon />
                                                    </Button>
                                                )}
                                            </>
                                        )}
                                    </AccordionSummary>

                                    <AccordionDetails>

                                        <EmployeePaymentMode
                                            formData1={formData1}
                                            selectedPaymentType={selectedPaymentType}
                                            handlePaymentTypeChange={handlePaymentTypeChange}
                                            StyledLabel={StyledLabel}
                                            control={control}
                                            formData6={formData6}
                                            StyledInput={StyledInput}
                                            errors={errors}
                                            openEdit={openEditsix}
                                            setFormData6={setFormData6}
                                        />

                                        <Grid display='flex' justifyContent='flex-end' sx={{ paddingRight: 6 }} >
                                            {(!openEditsix) &&
                                                <Grid >
                                                    <Button variant="contained" color="primary" type="submit" onClick={() => hanldeUpdate(5)} disabled={!isValid}>
                                                        Update
                                                    </Button>
                                                </Grid>
                                            }
                                        </Grid >

                                    </AccordionDetails>

                                </Accordion> */}
